	.text











	.hsa_code_object_version 2,1

	.hsa_code_object_isa 9,0,0,"AMD","AMDGPU"

	.p2align	8
	.type	hello_world,@function
	.amdgpu_hsa_kernel hello_world

hello_world:
.Lfunc_begin0:
	.amd_kernel_code_t
		amd_code_version_major = 1
		amd_code_version_minor = 1
		amd_machine_kind = 1
		amd_machine_version_major = 9
		amd_machine_version_minor = 0
		amd_machine_version_stepping = 0
		kernel_code_entry_byte_offset = 256
		kernel_code_prefetch_byte_size = 0
		granulated_workitem_vgpr_count = 5
		granulated_wavefront_sgpr_count = 5
		priority = 0
		float_mode = 192
		priv = 0
		enable_dx10_clamp = 0
		debug_mode = 0
		enable_ieee_mode = 1
		enable_sgpr_private_segment_wave_byte_offset = 0
		user_sgpr_count = 2
		enable_trap_handler = 1
		enable_sgpr_workgroup_id_x = 1
		enable_sgpr_workgroup_id_y = 0
		enable_sgpr_workgroup_id_z = 0
		enable_sgpr_workgroup_info = 0
		enable_vgpr_workitem_id = 0
		enable_exception_msb = 0
		granulated_lds_size = 0
		enable_exception = 0
		enable_sgpr_private_segment_buffer = 0
		enable_sgpr_dispatch_ptr = 0
		enable_sgpr_queue_ptr = 0
		enable_sgpr_kernarg_segment_ptr = 1
		enable_sgpr_dispatch_id = 0
		enable_sgpr_flat_scratch_init = 0
		enable_sgpr_private_segment_size = 0
		enable_sgpr_grid_workgroup_count_x = 0
		enable_sgpr_grid_workgroup_count_y = 0
		enable_sgpr_grid_workgroup_count_z = 0
		enable_ordered_append_gds = 0
		private_element_size = 0
		is_ptr64 = 1
		is_dynamic_callstack = 0
		is_debug_enabled = 0
		is_xnack_enabled = 0
		workitem_private_segment_byte_size = 0
		workgroup_group_segment_byte_size = 0
		gds_segment_byte_size = 0
		kernarg_segment_byte_size = 16
		workgroup_fbarrier_count = 0
		wavefront_sgpr_count = 10
		workitem_vgpr_count = 20
		reserved_vgpr_first = 0
		reserved_vgpr_count = 0
		reserved_sgpr_first = 0
		reserved_sgpr_count = 0
		debug_wavefront_private_segment_offset_sgpr = 0
		debug_private_segment_buffer_sgpr = 0
		kernarg_segment_alignment = 4
		group_segment_alignment = 4
		private_segment_alignment = 4
		wavefront_size = 6
		call_convention = -1
		runtime_loader_kernel_symbol = 0
	.end_amd_kernel_code_t



	s_load_dwordx2 s[2:3], s[0:1], 0x8

	s_mov_b32 s6, s2

	s_mov_b32 s7, s3

	s_mov_b32 s8, s4

	s_load_dwordx2 s[4:5], s[0:1], 0x10

	s_load_dwordx2 s[0:1], s[0:1], 0x0


	v_lshlrev_b32_e32 v2, 4, v1
	v_add_u32_e32 v2, v2, v0
	s_mul_i32 s9, s6, 0x400
	v_add_u32_e64 v2, v2, s9
	s_mul_i32 s9, s7, 0xe000
	v_add_u32_e64 v2, v2, s9
	v_lshlrev_b32_e32 v2, 4, v2


	s_mul_i32 s9, s8, 64
	v_add_u32_e64 v3, v0, s9
	v_lshlrev_b32_e32 v3, 4, v3

	s_waitcnt lgkmcnt(2)


	v_mov_b32_e32 v6, s3

	v_add_co_u32_e64 v5, vcc, v2, s2

	v_addc_co_u32_e64 v6, vcc, v6, 0, vcc


	flat_load_dwordx4 v[7:10], v[5:6]


	s_waitcnt lgkmcnt(1)


	v_mov_b32_e32 v12, s5

	v_add_co_u32_e64 v11, vcc, v3, s4

	v_addc_co_u32_e64 v12, vcc, v12, 0, vcc


	flat_load_dwordx4 v[13:16], v[11:12]


	s_mul_i32 s9, s6, 56
	v_add_u32_e64 v4, v1, s9
	s_mul_i32 s9, s8, 0xc40
	v_add_u32_e64 v4, v4, s9
	s_mul_i32 s9, s7, 0x31000
	v_add_u32_e64 v4, v4, s9
	v_lshlrev_b32_e32 v4, 2, v4

	s_waitcnt vmcnt(0)


	v_mov_b32_e32 v17, 0

	v_mac_f32_e32 v17, v7, v13

	v_mac_f32_e32 v17, v8, v14

	v_mac_f32_e32 v17, v9, v15

	v_mac_f32_e32 v17, v10, v16


	s_nop 4

	v_add_f32_dpp v16, v17, v17  row_shr:1 row_mask:0xf bank_mask:0xf bound_ctrl:0

	s_nop 1

	v_add_f32_dpp v16, v17, v16  row_shr:2 row_mask:0xf bank_mask:0xf bound_ctrl:0

	s_nop 1

	v_add_f32_dpp v16, v17, v16  row_shr:3 row_mask:0xf bank_mask:0xf bound_ctrl:0

	s_nop 1

	v_add_f32_dpp v16, v16, v16  row_shr:4 row_mask:0xf bank_mask:0xe

	s_nop 1

	v_add_f32_dpp v16, v16, v16  row_shr:8 row_mask:0xf bank_mask:0xc

	s_nop 1


	s_waitcnt lgkmcnt(0)


	v_mov_b32_e32 v15, s1

	v_add_co_u32_e32 v14, vcc, s0, v4

	v_addc_co_u32_e32 v15, vcc, 0, v15, vcc

	v_cmp_eq_u32_e64 vcc, v0, 0

	s_cbranch_vccnz BB0_1


BB0_1:
	flat_store_dword v[14:15], v16

	s_endpgm

.Lfunc_end0:
	.size	hello_world, .Lfunc_end0-hello_world
